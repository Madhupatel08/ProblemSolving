//Given an array A of positive integers. Your task is to find the leaders in the array.

//Note: An element of array is leader if it is greater than or equal to all the elements to its right side. Also, the rightmost element is always a leader.

    static ArrayList<Integer> leaders(int arr[], int n){
        
        // Your code here
        
        
        /******************
     * You just need to complete this
     * function and return the vector
     * containing the leaders.
     * ***************/
    // Approach 1 using Stack
      ArrayList<Integer>ans=new ArrayList<>();
    //  Stack<Integer>st=new Stack<>();
    //  int count=0;
    //  for(int i=arr.length-1;i>=0;i--){
    //      while(st.size()>0 && arr[i]>=st.peek()){
    //          st.pop();
    //      }if(st.size()==0){
    //         ans.add(arr[i]);
    //      }
    //      st.push(arr[i]);
    //  }
     //Approach 2 using Arrays
    int max = Integer.MIN_VALUE;
    for(int i=n-1;i>=0;i--){
        if(arr[i]>=max){
            max=arr[i];
            ans.add(max);
        }
    }
    
      ArrayList<Integer> temp = new ArrayList<>();
     while(ans.size()>0){
         int t = ans.remove(ans.size()-1);
         temp.add(t);
     }
     return temp;
     
    }
